# This is a docker compose file used to run the required support (ie postgres) for local development. This will run the app with the files mounted in place.
# ex: docker compose -f local_compose.yaml up

services:
  web:
    container_name: tinnitus_web
    build:
      context: .
      dockerfile: Dockerfile.dev  # Use the development Dockerfile
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - ./:/home/genie/app
    environment:
      GENIE_ENV: dev
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
    command: >
      bash -c "julia -e 'using Pkg; Pkg.activate(\".\"); Pkg.instantiate(); Pkg.precompile();'; bin/server"
  
  # based on  https://www.docker.com/blog/how-to-use-the-postgres-docker-official-image/
  db:
    container_name: tinnitus_postgres
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      PGUSER: postgres # needed for health check/let it use default user # https://stackoverflow.com/questions/60193781/postgres-with-docker-compose-gives-fatal-role-root-does-not-exist-error/60194261#60194261
    volumes:
      - ./pgdata:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "127.0.0.1:8001:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
  
volumes:
  pgadmin: